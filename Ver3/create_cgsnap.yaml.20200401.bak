---
- name: Create Clone & Map the Clone LUN
  hosts: localhost
  gather_facts: no
  connection: local

  collections:
    - netapp.ontap

  vars_files:
    - ontap_vars.yaml

  vars:
    login: &login
      hostname: "{{ ontap_hostname }}"
      username: "{{ ontap_username}}"
      password: "{{ ontap_password }}"
      https: true
      validate_certs: false
      
    drlogin: &drlogin
      hostname: "{{ ontap_drhostname }}"
      username: "{{ ontap_drusername}}"
      password: "{{ ontap_drpassword }}"
      https: true
      validate_certs: false

  tasks:
    - name: Create CG Snapshot
      na_ontap_cg_snapshot:
        state: present
        vserver: "{{ ontap_vserver }}"
        snapshot: "{{ ontap_snapshot }}"
        volumes: "{{ ontap_volumes }}"
        snapmirror_label: "{{ ontap_snapshot }}"
        <<: *login
      register: result
      retries: 5
      delay: 11
      until: result is changed

    - debug:
        msg: "{{ ontap_cloneprefix1 + item}}"
      with_items: "{{ ontap_volumes }}"
      
    - name: Perform snapmirror update
      shell: /netapp/snapmirrorupdate.sh >> /netapp/snapmirrorupdate.log
      
    - name: Perform snapmirror update
      shell: /netapp/snapmirrorupdate.sh >> /netapp/snapmirrorupdate.log

    - name: Create FlexClone Set 1 in DR
      na_ontap_volume_clone:
        state: present
        vserver: "{{ ontap_drvserver }}"
        parent_volume: "{{ item }}"
        name: "{{ ontap_cloneprefix1 + item }}"
        space_reserve: none
        parent_snapshot: "{{ ontap_snapshot }}"
        <<: *drlogin
      with_items: "{{ ontap_volumes }}"

    - name: Execute the command in remote shell; stdout goes to the specified file on the remote.
      shell: /netapp/changeserial.sh >> /netapp/changeserial.log

    - include_tasks: lunmap.yaml
      with_items: "{{ ontap_cloneluns1 }}"

    - name: Execute the command in remote shell; stdout goes to the specified file on the remote.
      shell: /netapp/mountandstartdb.sh >> /netapp/mountandstartdb.log

