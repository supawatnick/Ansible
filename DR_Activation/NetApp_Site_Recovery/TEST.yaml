
---
- hosts: localhost
  gather_facts: false
  collections:
    - netapp.ontap

  vars_files:
    - vars.yaml

  vars:
    login: &dclogin
      hostname: "{{ ontap_dchostname }}"
      username: "{{ ontap_dcusername }}"
      password: "{{ ontap_dcpassword }}"
      https: true
      validate_certs: false

  tasks:

###Get all volumes after clone
    - name: Get volume
      uri: 
        url: "https://{{ sfuser }}:{{ sfpassword }}@{{ sfhostname }}/json-rpc/11.0/"
        method: POST
        return_content: yes
        body: >
          {
            "method": "ListVolumes",
            "params": {
              "includeVirtualVolumes": false
            }
          }
        body_format: json
        validate_certs: no
      register: listvolume

# ###Get all volumes after clone
    - name: list Volume
      debug:
        msg: "{{ listvolume }}"

###Get all volumes ID after clone   
    - name: Get volume ID with clone
      set_fact:
        listvolumeid: "{{ listvolumeid | default([]) + [ sf.volumeID ] }}"
      with_items: "{{ listvolume.json.result.volumes }}"
      when: sf.name is match("clone*")
      loop_control:
        loop_var: sf

    - name: print clone ID
      debug:
        msg: "{{ listvolumeid }}"

###Delete Clone Volumes
    - name: Delete Clone Volumes
      uri: 
        url: "https://{{ sfuser }}:{{ sfpassword }}@{{ sfhostname }}/json-rpc/11.0/"
        method: POST
        return_content: yes
        body: >
          {
            "method": "DeleteVolumes",
            "params": {
              "volumeIDs": {{ item }}
              ]
            }
          }
        body_format: json
        validate_certs: no
      with_items: "{{ listvolumeid }}"

...
